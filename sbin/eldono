#!/bin/bash

## | Subtenas prepari kaj publikigi eldonojn
##
## Voku kiel:
##    eldono <celo>
##
## kie <celo> estas unu el la sekvaj:


# jen kelkaj informoj kiel eviti plurfoje doni la pasvorton por scp:
# https://linux.101hacks.com/unix/ssh-controlmaster/
# + ControlPersist 2m
# http://blogs.perl.org/users/smylers/2011/08/ssh-productivity-tips.html

#host=retavortaro.de
# aldonu en /etc/hosts!
host=revo
eldono=2l
node_eldono=2.0.12
revo=${host}:www/revo
files=${host}:files

# ni komprenas preparo | docker | servilo kaj supozas "docker", se nenio donita argumente
# por specialaj okazoj ni povas kopii ankaŭ dosierojn el loka Revo-versio al la servilo
# per unu el artikoloj | historioj | indeksoj | fontoj
target="${1:-helpo}"

JSC=build/jsc/revo-${eldono}-min.js
CSS=build/stl/revo-${eldono}-min.css

GLOBAL=jsc/u/global.ts
PACKG=package.json

case $target in
servilo)
    ## servilo    : kompilas kaj transsendas JS+CSS al la publika servilo
    # ĉu ni supozu, ke ni jam kompilis JS kaj CSS ...? 
    npm run build:js
    npm run build:css
    scp ${JSC} ${revo}/jsc
    scp ${CSS} ${revo}/stl
    ;;
preparo)
    ## preparo    : preparas novan eldonon. Antaŭe kreu branĉon kun la nomo de la eldono
    ##              kaj adaptu la parametrojn eldono kaj node_eldono en ambaŭ skriptoj 'eldono' kaj 'deplojo'
    # kontrolu ĉu la branĉo kongruas kun la agordita versio
    branch=$(git symbolic-ref --short HEAD)
    if [ "${branch}" != "${eldono}" ]; then
        echo "Ne kongruas la branĉo (${branch}) kun la eldono (${eldono})"
        echo "Agordu la variablon 'eldono' en tiu ĉi skripto por prepari novan eldonon."
        exit 1
    fi

    echo "Aktualigante skriptojn al nova eldono ${eldono}..."
    sed -i 's/eldono = "[1-9][a-z]";/eldono = "'${eldono}'";/' ${GLOBAL}
    sed -i 's,/revo-[1-9][a-z]-min\.,/revo-'${eldono}'-min\.,g' ${PACKG}
    sed -i 's,/redaktilo-[1-9][a-z]-min\.,/redaktilo-'${eldono}'-min\.,g' ${PACKG}
    sed -i 's/"version": "[1-9].[0-9].[1-9]"/"version": "'${node_eldono}'"/' ${PACKG}
    ;;
kreo)
    ## kreo       : kompilas la procezujon voko-grundo, kies rezultoj estas bezonataj de aliaj
    ##              procezujoj Araneo, Cetonio, Formiko    
    echo "Kreante lokan procezujon (por docker) voko-grundo"
    docker build -t voko-grundo .
    ;;    
etikedo)
    ## etikedo    : puŝas la lastajn ŝanĝojn al Github ŝovante la eldonetikedon tiel,
    ##              ke en Github kompiliĝu nova aktuala pakaĵo
    echo "Provizante la aktualan staton per etikedo (git tag) v${eldono}"
    echo "kaj puŝante tiun staton al la centra deponejo"
    git tag -f v${eldono} && git push && git push origin v${eldono} -f
        # alternative anst. la lasste eble funkcias ankaŭ: git push --follow-tags
    ;;
dtd)
    ## dtd        : transsendas la DTD/RNC-dosierojn donitajn en la komandlinio al la publika servilo
    # kopiu ĉiujn xsl-dosierojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${revo}/dtd/
    ;;     
xsl)
    ## xsl        : transsendas la precipajn XSL-dosierojn donitajn en la komandlinio al la publika servilo
    # kopiu ĉiujn xsl-dosierojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${files}/xsl/
    ;;     
xsl-inc)
    ## xsl-inc    : transsendas la inkluziveblajn, t.e. sub-XSL-dosierojn el xsl/inc,
    ##              donitajn en la komandlinio, al la publika servilo
    # kopiu ĉiujn xsl-dosierojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${files}/xsl/inc/
    ;;
smb)
    ## smb        : transsendas la simbolojn donitajn en la komandlinio al la publika servilo
    # kopiu ĉiujn smb-dosierojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${revo}/smb/
    ;;    
artikoloj)
    ## artikoloj  : transsendas la artikolojn (HTML) donitajn en la komandlinio al la publika servilo    
    # kopiu ĉiujn artikolojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${revo}/art/
    ;;
historioj)
    ## historioj  : transsendas la artikolo-hisotriojn (HTML) donitajn en la komandlinio al la publika servilo    
    # kopiu ĉiujn historiojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${revo}/hst/
    ;;
indeksoj)
    ## indeksoj   : transsendas la indkesojn (HTML) donitajn en la komandlinio al la publika servilo    
    # kopiu ĉiujn indeksojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${revo}/inx/
    ;;
fontoj)
    ## fontoj     : transsendas la artikol-fontojn (XML) donitajn en la komandlinio al la publika servilo    
    # kopiu ĉiujn XML-fontojn donitaj sur komandlinio (ekde dua argumento) al la servilo
    scp "${@:2}" ${revo}/xml/
    ;;
helpo | *)
    ## helpo      : baza informo  
    echo "---------------------------------------------------------------------------"
    echo "Tiu skripto servas por publikigi dosierojn loke preparitajn en la servilo."
    echo "Tiucele ekzistas celoj 'servilo', 'artikoloj', 'historioj', 'indeksoj', 'fontoj'."
    echo ""
    echo "Per la aparta celo 'preparo' oni povas krei git-branĉon kun nova eldono por tie "
    echo "komenci programadon de novaj funkcioj, ŝanĝoj ktp. Antaŭ adaptu en la kapo de ĉi-skripto"
    echo "la variablojn 'eldono' kaj 'node_eldono' al la nova eldono."
    echo "Per la celo 'etikedo' vi provizas aktualan staton per 'git tag', necesa por "
    echo "ke kompiliĝu ĉe Github nova eldono de procezujo 'docker' kiel bazo por Cetonio kaj Araneo."
    ;;    
esac
